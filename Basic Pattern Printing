class Pattern {
    /*
     *       * * * * *
     *       * * * * *
     *       * * * * *
     *       * * * * *
     *       * * * * * 
     */
    public void patternA(int n){
        for(int i=1; i<=n; i++){
            for(int j=1; j<=n; j++){
                System.out.print("* ");
            }
            System.out.println();
        }
    } 
    /*
     *       1 1 1 1 1
     *       2 2 2 2 2
     *       3 3 3 3 3
     *       4 4 4 4 4
     *       5 5 5 5 5 
     */
    public void patternB(int n){
        for(int i=1; i<=n; i++){
            for(int j=1; j<=n; j++){
                System.out.print(i+" ");
            }
            System.out.println();
        }
    }

    /*
     *       *
     *       * *
     *       * * *
     *       * * * *
     *       * * * * * 
     */
    public void patternC(int n){
        for(int i=1; i<=n; i++){
            for(int j=1; j<=i; j++){
                System.out.print("*"+" ");
            }
            System.out.println();
        }
    }

    /*
     *       1
     *       1 2
     *       1 2 3
     *       1 2 3 4
     *       1 2 3 4 5 
     */
    public void patternD(int n){
        for(int i=1; i<=n; i++){
            for(int j=1; j<=i; j++){
                System.out.print(j+" ");
            }
            System.out.println();
        }
    }

    /*
     *       1
     *       0 1
     *       1 0 1
     *       0 1 0 1
     *       1 0 1 0 1 
     */
    public void patternE(int n){
        for(int i=1; i<=n; i++){
            int x = i%2;
            for(int j=1; j<=i; j++){
                if((j%2==1 && x==1) || (j%2==0 && x==0)){
                    System.out.print("1 ");
                }
                else{
                    System.out.print("0 ");
                }
            }
            System.out.println();
        }
    }

     /*
     *       1
     *       2 3
     *       4 5 6
     *       7 8 9 10
     *       11 12 13 14 15 
     */
    public void patternF(int n){
        int x = 1;
        for(int i=1; i<=n; i++){
            for(int j=1; j<=i; j++){
                System.out.print(x++ +" ");
            }
            System.out.println();
        }
    }

    /*
     *       * * * * *
     *       * * * *
     *       * * *
     *       * * 
     *       * 
     */
    public void patternG(int n){
        for(int i=1; i<=n; i++){
            for(int j=n; j>=i; j--){
                System.out.print("*" +" ");
            }
            System.out.println();
        }
    }

    /*
     *       5 5 5 5 5
     *       4 4 4 4
     *       3 3 3
     *       2 2 
     *       1
     */
    public void patternH(int n){
        int x=n;
        for(int i=1; i<=n; i++){
            for(int j=n; j>=i; j--){
                System.out.print(x +" ");
            }
            x--;
            System.out.println();
        }
    }

    /*
     *       1 2 3 4 5
     *       1 2 3 4
     *       1 2 3
     *       1 2 
     *       1
     */
    public void patternI(int n){
        for(int i=1; i<=n; i++){
            int x = n-1;
            for(int j=n; j>=i; j--){
                System.out.print(j-x +" ");
                x-=2;
            }
            System.out.println();
        }
    }

    /*
     *       *
     *       * * 
     *       * * *
     *       * * * * 
     *       * * * * *
     *       * * * *
     *       * * *
     *       * *
     *       *
     */

    public void patternJ(int n){
        for(int i=1; i<=n; i++){
            for(int j=1; j<=i; j++){
                System.out.print("* ");
            }
            System.out.println();
        }
        for(int i=1; i<=n-1; i++){
            for(int j=n-1; j>=i; j--){
                System.out.print("* ");
            }
            System.out.println();
        }
    }

    /*
     *       X    X
     *        X  X
     *          X
     *        X  X
     *      X     X
     */

     public void patternK(char n[]){
        for(int i=0; i<n.length; i++){
            for(int j=0; j<n.length; j++){
                if(i==j)
                    System.out.print(n[i]);
                else if((i+j)==n.length-1)
                    System.out.print(n[i]);
                else
                    System.out.print(" ");    
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Pattern obj = new Pattern();
        int arr[] = {3, 5, 10};
        char n[] = {'S', 'R', '3'};
        for(int i : arr){
            System.out.println(" n = "+i);
            obj.patternK(n);
            System.out.println();
        }
    }
}
